#!/bin/bash

# Copyright (C) 2017, 2019, 2020  Open Tech Strategies, LLC
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

CSV_ONLY=""
PARE=""
while getopts "cp:" opt; do
  case $opt in
    c) CSV_ONLY="--csv-only" ;;
    p) PARE="--pare=$OPTARG" ;;
  esac
done
shift $((OPTIND -1))

COMPETITION="DemoView"
LFC_DIR=`dirname "${0}"`
BASE_DATA_DIR="${1}"
TORQUE_DIR="${2}"

if [[ "${BASE_DATA_DIR}" = "" || "${TORQUE_DIR}" == "" ]] ; then
  echo "ERROR: BASE_DATA_DIRECTORY and TORQUE_DIRECTORY argument required."
  echo ""
  echo "Usage: '${0} [-a] [-p number] BASE_DATA_DIRECTORY TORQUE_DIRECTORY'"
  echo ""
  echo "Options:"
  echo ""
  echo "  -c                  Uploads CSV only.  Skips creating pages and"
  echo "                      uploading attachments."
  echo "  -p <pare>           Pares by factor of PARE"
  echo ""
  echo "BASE_DATA_DIRECTORY/DemoView is where all the work is done,"
  echo "TORQUE_DIRECTORY is where the example spreadsheet lives."
  echo ""
  exit 1
fi

DATA_DIR="${BASE_DATA_DIR}/${COMPETITION}"

# Make sure we have python3
python3 -V > /dev/null 2>&1 || { echo "python3 required, aborting" ; exit 1; }

PROPOSALS_CSV="Example_Spreadsheet.csv"
TDC_CONFIG_DIR="${DATA_DIR}/tdcconfig"
EXAMPLE_MOU="example-mou.pdf"
EXAMPLE_FINANCIALS="example-financials.pdf"
RUNNER="${LFC_DIR}"/compose-and-upload

if [ ! -f "$TORQUE_DIR/example/$PROPOSALS_CSV" ] ; then
  echo "ERROR: $PROPOSALS_CSV doesn't exist yet"
  echo ""
  echo "You probably need to run ./deploy in $TORQUE_DIR/example/"
  exit 1
fi

if [ ! -d "${DATA_DIR}" ] ; then
  echo "Stage 0: Setting up data directory..."

  mkdir -p $DATA_DIR

  cp $TORQUE_DIR/example/$PROPOSALS_CSV $DATA_DIR/$PROPOSALS_CSV
  cp $TORQUE_DIR/example/$EXAMPLE_MOU $DATA_DIR/$EXAMPLE_MOU
  cp $TORQUE_DIR/example/$EXAMPLE_FINANCIALS $DATA_DIR/$EXAMPLE_FINANCIALS

  mkdir -p $TDC_CONFIG_DIR
fi

if ! echo "975e32bbf02cc0fb66df4adc1aefdc5c0e17a3dd  $DATA_DIR/$PROPOSALS_CSV" | sha1sum -c &> /dev/null ; then
  echo "ERROR: SHA of PROPOSALS_CSV did not match expectation!"
  exit 1
fi

### Compose the spreadsheets into one cohesive whole.
#
# Use --pare to convert only 1% of the entries, to save time while testing. 
echo "Stage 1: Composing..."
${RUNNER} --proposals-csv="${DATA_DIR}/${PROPOSALS_CSV}" \
          $PARE \
          $CSV_ONLY \
          --tdc-config-dir="${TDC_CONFIG_DIR}" \
          --example-mou="${DATA_DIR}/${EXAMPLE_MOU}" \
          --example-financials="${DATA_DIR}/${EXAMPLE_FINANCIALS}"
if [ $? -ne 0 ]; then
		echo Composition failure!
		exit 1
fi
echo "Done creating wiki."
