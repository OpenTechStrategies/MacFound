#!/bin/bash

# Copyright (C) 2017, 2019, 2020  Open Tech Strategies, LLC
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

SCRIPT_DIR=`dirname "$BASH_SOURCE"`
COMMON_SCRIPT_DIR="${SCRIPT_DIR}/../../../etl/common/deploy"
source "${COMMON_SCRIPT_DIR}/utils"
source "${COMMON_SCRIPT_DIR}/init"

COMPETITION="ECW2020"
LFC_DIR=`dirname "${0}"`

DATA_DIR="${BASE_DATA_DIR}/${COMPETITION}"

# Make sure we have python3
python3 -V > /dev/null 2>&1 || { echo "python3 required, aborting" ; exit 1; }

command -v xlsx2csv 2>&1 >> /dev/null || { echo >&2 "xlsx2csv required but it's not available.  Aborting."; exit 1; }

PROPOSALS_CSV="Shane Eggerman - ECWC_Registration_Application_data_updated.csv"
BASE_ATTACHMENTS="Shane Eggerman - ECWC_Registration_Application_datÐ° copy 2.zip"
JUDGE_EVALUATION_CSV="Shane Eggerman - ECWC_Peer_Review_Data copy.csv"
EXPERT_PANEL_EVALUATION_CSV="Shane Eggerman - ECWC_Evaluation_Panel_Data_anon.csv"
APPLICATION_DATA="ECW Application Data.xlsx"
ATTACHMENTS_DIR="${DATA_DIR}/attachments/"
FINANCIAL_DATA="ECW-BudgetTable Template for Wiki_vUpdated.xlsx"
FINANCIAL_DATA_DAT="ECW-BudgetTable Template for Wiki_vUpdated.dat"
FINANCIAL_SHEETS_DIR="${DATA_DIR}/financial-sheets/"
TMP_ATTACHMENTS_DIR="${DATA_DIR}/tmpattachments"
TDC_CONFIG_DIR="${DATA_DIR}/tdcconfig"
RUNNER="${LFC_DIR}"/compose-and-upload

if [ ! -d "${DATA_DIR}" ] ; then
  echo "Stage 0: Setting up data directory..."

  if [ "${OTS_DIR}" = "" ] ; then
    echo "ERROR: \$OTS_DIR is not set up"
    echo ""
    echo "See bureaucracy/onboarding about setting the OTS_DIR environment variable up"
    exit 1
  fi

  ENCRYPTED_DIR="${OTS_DIR}/clients/lever-for-change/torque-sites/${COMPETITION}/data/bigdata"
  if [ ! -d "${ENCRYPTED_DIR}" ] ; then
    echo "ERROR: it looks like your encrypted dir isn't checked out"
    echo ""
    echo "It was expected to be in:"
    echo "  $ENCRYPTED_DIR"
    echo ""
    echo "You will need to check out the subversion torque-sites data, and then"
    echo "run get-bigdata from ${OTS_DIR}/clients/lever-for-change/torque-sites/${COMPETITION}/data/"
    exit 1
  fi

  mkdir -p $DATA_DIR
  echo "Decrypting..."

  gpg -o "${DATA_DIR}/${JUDGE_EVALUATION_CSV}" --decrypt "${ENCRYPTED_DIR}/${JUDGE_EVALUATION_CSV}.gpg" || exit 1
  gpg -o "${DATA_DIR}/${EXPERT_PANEL_EVALUATION_CSV}" --decrypt "${ENCRYPTED_DIR}/${EXPERT_PANEL_EVALUATION_CSV}.gpg" || exit 1
  gpg -o "${DATA_DIR}/${APPLICATION_DATA}" --decrypt "${ENCRYPTED_DIR}/${APPLICATION_DATA}.gpg" || exit 1
  gpg -o "${DATA_DIR}/${BASE_ATTACHMENTS}" --decrypt "${ENCRYPTED_DIR}/${BASE_ATTACHMENTS}.gpg" || exit 1
  gpg -o "${DATA_DIR}/${FINANCIAL_DATA}" --decrypt "${ENCRYPTED_DIR}/${FINANCIAL_DATA}.gpg" || exit 1
  gpg -o "${DATA_DIR}/${FINANCIAL_DATA_DAT}" --decrypt "${ENCRYPTED_DIR}/${FINANCIAL_DATA_DAT}.gpg" || exit 1
  gpg -o "${DATA_DIR}/${PROPOSALS_CSV}" --decrypt "${ENCRYPTED_DIR}/${PROPOSALS_CSV}.gpg" || exit 1

  xlsx2csv "$DATA_DIR/$APPLICATION_DATA" > "$DATA_DIR/${APPLICATION_DATA/xlsx/csv}"

  mkdir -p ${TDC_CONFIG_DIR}

  echo "Setting up attachments..."
  mkdir -p $TMP_ATTACHMENTS_DIR
  unzip -d "${TMP_ATTACHMENTS_DIR}" "${DATA_DIR}/${BASE_ATTACHMENTS}"
  mv "${TMP_ATTACHMENTS_DIR}/Valid" $ATTACHMENTS_DIR

  # Clean up large zips to save disk space
  rm "${DATA_DIR}/${BASE_ATTACHMENTS}"
  rm -rf ${DATA_DIR}/${TMP_ATTACHMENTS_DIR}

  mkdir -p "${FINANCIAL_SHEETS_DIR}"
  while IFS=: read SHEET_NAME APP_NUMBER ; do
    xlsx2csv "$DATA_DIR/$FINANCIAL_DATA" -n "$SHEET_NAME" > ${FINANCIAL_SHEETS_DIR}/$APP_NUMBER.csv
  done < "${DATA_DIR}/${FINANCIAL_DATA_DAT}"
fi

if ! echo "3437c7099afedbd9979691dc2730914371f43ff0  $DATA_DIR/$PROPOSALS_CSV" | sha1sum -c &> /dev/null ; then
  echo "ERROR: SHA of PROPOSALS_CSV did not match expectation!"
  echo "This means that we most likely got a new file, which may have the old"
  echo "errors in it (specifically the organization proposal 829)."
  echo "If we got a new file and there are no further errors, you"
  echo "can remove this check from torque-refresh!  If not, please"
  echo "make adjustments in a new file and update the sha."
  exit 1
fi

mkdir -p $TDC_CONFIG_DIR

${RUNNER} --proposals-csv="${DATA_DIR}/${PROPOSALS_CSV}" \
          --attachments-dir=${ATTACHMENTS_DIR} \
          --judge-evaluation-csv="${DATA_DIR}/${JUDGE_EVALUATION_CSV}" \
          --expert-panel-evaluation-csv="${DATA_DIR}/${EXPERT_PANEL_EVALUATION_CSV}" \
          --application-data="${DATA_DIR}/${APPLICATION_DATA/xlsx/csv}" \
          --financial-sheets-dir=${FINANCIAL_SHEETS_DIR} \
          $PARE \
          $CSV_ONLY \
          --tdc-config-dir="${TDC_CONFIG_DIR}"
if [ $? -ne 0 ]; then
		echo Failure!
		exit 1
fi

echo "Done creating wiki."
