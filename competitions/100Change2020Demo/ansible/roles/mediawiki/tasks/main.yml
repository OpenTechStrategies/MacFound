---

- name: Setup installation directory
  file:
    path: "{{ mediawiki_install_directory }}"
    state: directory

- name: Download MediaWiki
  get_url:
    url: https://releases.wikimedia.org/mediawiki/1.35/mediawiki-{{ mediawiki_version }}.tar.gz
    dest: "{{ mediawiki_install_directory }}/mediawiki-{{ mediawiki_version }}.tar.gz"
    checksum: sha256:3a7fbc1dec03533b57c688b075f721bba70eb14d92a4a1eab8d7d5a5943f2ed4

- name: Extract MediaWiki tarball
  unarchive:
    src: "{{ mediawiki_install_directory }}/mediawiki-{{ mediawiki_version }}.tar.gz"
    dest: "{{ mediawiki_install_directory }}/"
    remote_src: yes
    creates: "{{ mediawiki_install_directory }}/mediawiki-{{ mediawiki_version }}/"

- name: Enable PHP modules
  become_user: root
  shell: phpenmod {{ item }}
  loop:
    - mbstring
    - mysqli
    - xml

- name: Get Composer
  get_url:
    url: https://getcomposer.org/installer
    dest: "{{ mediawiki_install_directory }}/composer-setup.php"
    checksum: "sha384:756890a4488ce9024fc62c56153228907f1545c228516cbf63f885e036d37e9a59d27d63f46af1d4d07ee0f76181c7d3"

- name: Make wiki bin directory
  file:
    path: "{{ mediawiki_install_directory }}/bin"
    state: directory

- name: Check out Torque
  git:
    repo: https://github.com/OpenTechStrategies/torque
    dest: "{{ mediawiki_install_directory }}/torque/"
    version: b3afba9

- name: Link TorqueDataConnect
  file:
    src: "{{ mediawiki_install_directory }}/torque/TorqueDataConnect/"
    dest: "{{ mediawiki_install_directory }}/mediawiki-{{ mediawiki_version }}/extensions/TorqueDataConnect"
    state: link

- name: Create Wiki
  command: "php {{ mediawiki_install_directory }}/mediawiki-{{ mediawiki_version }}/maintenance/install.php --dbtype=mysql --dbserver=localhost --dbuser=\"{{ db_username }}\" --dbpass=\"{{ db_password }}\" --dbname=100Change2020Demo --scriptpath=\"/100Change2020Demo\" --lang=en --pass=\"{{ mediawiki_admin_password }}\" \"100Change2020Demo\" \"admin\""
  args:
    creates: "{{ mediawiki_install_directory }}/mediawiki-{{ mediawiki_version }}/LocalSettings.php"

- name: Enable TorqueDataConnect
  blockinfile:
    path: "{{ mediawiki_install_directory }}/mediawiki-{{ mediawiki_version }}/LocalSettings.php"
    marker: "## {mark} ANSIBLE TORQUEDATACONNECT CONFIG"
    block: |
      define("TORQUE_CONFIG", 4000);
      define("TORQUE_CONFIG_TALK", 4001);
      $wgExtraNamespaces[TORQUE_CONFIG] = "TorqueConfig";
      $wgExtraNamespaces[TORQUE_CONFIG_TALK] = "TorqueConfig_talk";
      $wgNamespaceProtection[TORQUE_CONFIG] = array("edittorqueconfig");
      $wgTorqueDataConnectConfigPage = "TorqueConfig:MainConfig";
      $wgTorqueDataConnectNotFoundMessage = "This proposal has been disqualified in admin, peer, or expert review.";
      $wgTorqueDataConnectSheetName = "proposals";
      $wgTorqueDataConnectWikiKey = "100Change2020Demo";
      wfLoadExtension('TorqueDataConnect');

- name: Disable MediaWiki Cache
  # When the cache is enabled, on AWS, with the default setting,
  # the following createAndPromote.php command fails due to cache timeout.
  # The reason isn't clear, but for now, this will fix it.
  lineinfile:
    path: "{{ mediawiki_install_directory }}/mediawiki-{{ mediawiki_version }}/LocalSettings.php"
    line: $wgMainCacheType = CACHE_NONE;

- name: Create csv2wiki user
  command: "php {{ mediawiki_install_directory }}/mediawiki-{{ mediawiki_version }}/maintenance/createAndPromote.php --bot --force --dbuser=\"{{ db_username }}\" --dbpass=\"{{ db_password }}\" \"{{ mediawiki_csv2wiki_username }}\" \"{{ mediawiki_csv2wiki_password }}\""

- name: Set Group Permissions
  blockinfile:
    marker: "## {mark} ANSIBLE GROUP PERMISSIONS CONFIG"
    path: "{{ mediawiki_install_directory }}/mediawiki-{{ mediawiki_version }}/LocalSettings.php"
    block: |
      $wgGroupPermissions['*']['read'] = false;
      $wgRestrictionLevels[] = 'generated';
      $wgGroupPermissions['sysop']['generated'] = true;
      $wgGroupPermissions['sysop']['edittorqueconfig'] = true;
      $wgGroupPermissions['sysop']['torquedataconnect-admin'] = true;
      $wgGroupPermissions['bot']['protect'] = true;
      $wgGroupPermissions['bot']['generated'] = true;
      $wgGroupPermissions['bot']['edit'] = true;
      $wgGroupPermissions['bot']['upload'] = true;
      $wgGroupPermissions['bot']['torquedataconnect-admin'] = true;

- name: Transfer LFC Logo
  copy:
    src: LeverForChange_Logo.png
    dest: "{{ mediawiki_install_directory }}/mediawiki-{{ mediawiki_version }}/resources/assets/LeverForChange_Logo.png"

- name: Install LFC Logo
  lineinfile:
    path: "{{ mediawiki_install_directory }}/mediawiki-{{ mediawiki_version }}/LocalSettings.php"
    regexp: ^\$wgLogos = .*
    line: $wgLogos = [ '1x' => "$wgResourceBasePath/resources/assets/LeverForChange_Logo.png" ];

- name: Install Demo.php
  copy:
    src: "{{ item }}"
    dest: "{{ mediawiki_install_directory }}/mediawiki-{{ mediawiki_version }}/"
  loop:
    - demo.php
    - "{{ lookup('env','OTS_DIR') }}/clients/lever-for-change/torque-sites/100Change2020Demo/data/demo_header.php"
    - "{{ lookup('env','OTS_DIR') }}/clients/lever-for-change/torque-sites/100Change2020Demo/data/demo_footer.php"

- name: Install Demo Files
  unarchive:
    src: "{{ lookup('env','OTS_DIR') }}/clients/lever-for-change/torque-sites/100Change2020Demo/data/demo_files.tar.gz"
    dest: "{{ mediawiki_install_directory }}/mediawiki-{{ mediawiki_version }}/"
    creates: "{{ mediawiki_install_directory }}/mediawiki-{{ mediawiki_version }}/demo_files/"

- name: Enable Demo
  lineinfile:
    path: "{{ mediawiki_install_directory }}/mediawiki-{{ mediawiki_version }}/LocalSettings.php"
    line: include "demo.php";

# This should come near the end to make sure that all the database updates
# for the extensions get run after the rest of the system is set up.
- name: Run mediawiki updates
  command: "php {{ mediawiki_install_directory }}/mediawiki-{{ mediawiki_version }}/maintenance/update.php"

# Handle Apache changes
- name: Symlink to webserver directory
  become_user: root
  file:
    state: link
    src: "{{ mediawiki_install_directory }}/mediawiki-{{ mediawiki_version }}"
    path: "{{ html_directory }}/100Change2020Demo"

- name: Restart Apache
  become_user: root
  service:
    name: apache2
    state: restarted
