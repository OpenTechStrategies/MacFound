#!/bin/bash

# Load all the submission  proposals into a wiki.
#
# Copyright (C) 2017, 2019  Open Tech Strategies, LLC
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

##########################################################################
#                                                                        #
#   NOTE: This code is highly specific to the particular filenames and   #
#   working environment used by Open Tech Strategies on a project for    #
#   the MacArthur Foundation.  For our own convenience, we have left     #
#   those assumptions in place.  That means this script won't work if    #
#   someone else tries to run it; we publish it just as an example.      #
#   It is open source software, so please modify it to suit your needs.  #
#                                                                        #
##########################################################################

MACFOUND_DIR=`dirname "${0}"`
DATA_DIR="${1}"

if [ "${DATA_DIR}" = "" ]; then
    BIGDATA_PATH="clients/macfound/eval-system/data/bigdata"
    [ -d "${OTSDIR}/${BIGDATA_PATH}" ] && DATA_DIR="${OTSDIR}/${BIGDATA_PATH}"
fi

if [ "${DATA_DIR}" = "" ]; then
  echo "ERROR: DATA_DIRECTORY argument required."
  echo ""
  echo "Usage: '${0} DATA_DIRECTORY'"
  echo ""
  echo "(DATA_DIRECTORY is where all the .csv files are.)"
  echo ""
  exit 1
fi

# Make sure we have python3
python3 -V > /dev/null 2>&1 || { echo "python3 required, aborting" ; exit 1; }

python3 -m csv2wiki --version >/dev/null 2>&1 || { echo "csv2wiki not installed, make sure 'python3 -m csv2wiki' works required, aborting" ; exit 1; }

if python3 -m csv2wiki --help > /dev/null; then
  echo "Great, it works." > /dev/null
else
  echo "ERROR: Problem running python3 -m csv2wiki."
  echo ""
  echo "Most likely you need to install the 'mwclient' and 'unidecode'"
  echo "Python modules.  Do 'pip install mwclient', and same for"
  echo "'bs4' and 'unidecode', and try running this script again."
  exit 1
fi

# csv2wiki needs a run-time config file.
CSV2WIKI_CONFIG="${MACFOUND_DIR}"/macfound-internal-csv2wiki-config
if [ ! -f "${CSV2WIKI_CONFIG}" ]; then
  echo "ERROR: No macfound-internal-csv2wiki-config file found."
  echo ""
  echo "Try doing"
  echo ""
  echo '  $ cp macfound-internal-csv2wiki-config.tmpl \\'
  echo "       macfound-internal-csv2wiki-config"
  echo ""
  echo "and then editing macfound-internal-csv2wiki-config as needed."
  echo ""
  exit 1
fi

PROPOSALS_CSV="Export-reg-and-app-data-Submission-deadline-06082019.csv"
ADMIN_REVIEW_CSV="AdminReviewP2P_mac2019_08192019.csv"
JUDGE_EVALUATION_CSV="Export_Judging-EvaluationPanel-SAMPLE-2019-07-12.csv"

OUTPUT_CSV="2019-processed.csv"

COMPOSER="${MACFOUND_DIR}"/compose-csvs

### Compose the spreadsheets into one cohesive whole.
#
# Use --pare to convert only 1% of the entries, to save time while testing. 
echo "Stage 1: Composing..."
${COMPOSER} "${DATA_DIR}/${PROPOSALS_CSV}" \
            "${DATA_DIR}/${ADMIN_REVIEW_CSV}" \
            "${DATA_DIR}/${JUDGE_EVALUATION_CSV}" > \
            "${DATA_DIR}/${OUTPUT_CSV}"
if [ $? -ne 0 ]; then
		echo Composition failure!
		exit 1
fi
echo "Done with Stage 1 (Composing)."
echo ""

echo "Creating wiki..."
python3 -m csv2wiki --cat-sort=alpha -c ${CSV2WIKI_CONFIG}                    \
            "${DATA_DIR}/${OUTPUT_CSV}"
echo "Done creating wiki."
echo ""
