#!/bin/bash

# Load all the submission  proposals into a wiki.
#
# Copyright (C) 2017, 2019, 2020  Open Tech Strategies, LLC
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

##########################################################################
#                                                                        #
#   NOTE: This code is highly specific to the particular filenames and   #
#   working environment used by Open Tech Strategies on a project for    #
#   the MacArthur Foundation.  For our own convenience, we have left     #
#   those assumptions in place.  That means this script won't work if    #
#   someone else tries to run it; we publish it just as an example.      #
#   It is open source software, so please modify it to suit your needs.  #
#                                                                        #
##########################################################################

COMPETITION="EO2020"
MACFOUND_DIR=`dirname "${0}"`
BASE_DATA_DIR="${1}"

if [ "${BASE_DATA_DIR}" = "" ]; then
  echo "ERROR: BASE_DATA_DIRECTORY argument required."
  echo ""
  echo "Usage: '${0} BASE_DATA_DIRECTORY'"
  echo ""
  echo "BASE_DATA_DIRECTORY/EO2020 is where all the work is done."
  echo ""
  exit 1
fi

DATA_DIR="${BASE_DATA_DIR}/${COMPETITION}"

# Make sure we have python3
python3 -V > /dev/null 2>&1 || { echo "python3 required, aborting" ; exit 1; }

PROPOSALS_CSV="EOC_registration_and_application_data.csv"
BASE_ATTACHMENTS="Registration_and_Application_data_exports_EOC.zip"
ATTACHMENTS_DIR="${DATA_DIR}/attachments/"
JUDGE_EVALUATION_CSV="EconomicOpportunityChallenge_Evaluation_Panel_Data_anon_judge.csv"
ADMIN_REVIEW_CSV="AdminReviewEP_eoc2019_03102020.csv"
LFC_EVALUATION_CSV="lfcrecommendations.csv"
REGIONCONFIG_CSV="regionconfig.csv"
TOP13_DATA_FILE="top13.dat"
THEMATIC_AREAS_CSV="EOC_Applications_Thematic_Areas.csv"
TOP13_SUPPLEMENTAL_ATTACHMENTS="EOC_Docs_for_Upload.zip"
TOP13_SYNTHESIS_MEMO_ATTACHMENTS="EOC_Synthesis_Memos.zip"
BRIDGESPAN_ANALYSIS_ZIP="200601-Bridgespan-data.zip"
BRIDGESPAN_ANALYSIS_CSV="200601-Bridgespan-data-for-Wiki-v1.csv"
BRIDGESPAN_ANALYSIS_FOLDER="${DATA_DIR}/Bridgespan-data"
TMP_ATTACHMENTS_DIR="${DATA_DIR}/tmpattachments"
TDC_CONFIG_DIR="${DATA_DIR}/tdcconfig"
RUNNER="${MACFOUND_DIR}"/compose-and-upload

if [ ! -d "${DATA_DIR}" ] ; then
  echo "Stage 0: Setting up data directory..."

  if [ "${OTS_DIR}" = "" ] ; then
    echo "ERROR: \$OTS_DIR is not set up"
    echo ""
    echo "See bureaucracy/onboarding about setting the OTS_DIR environment variable up"
    exit 1
  fi

  ENCRYPTED_DIR="${OTS_DIR}/clients/lever-for-change/torque-sites/${COMPETITION}/data/bigdata"
  if [ ! -d "${ENCRYPTED_DIR}" ] ; then
    echo "ERROR: it looks like your encrypted dir isn't checked out"
    echo ""
    echo "It was expected to be in:"
    echo "  $ENCRYPTED_DIR"
    echo ""
    echo "You will need to check out the subversion torque-sites data, and then"
    echo "run get-bigdata from ${OTS_DIR}/clients/lever-for-change/torque-sites/${COMPETITION}/data/"
    exit 1
  fi

  mkdir -p $DATA_DIR
  echo "Decrypting..."

  gpg -o ${DATA_DIR}/${ADMIN_REVIEW_CSV} --decrypt ${ENCRYPTED_DIR}/${ADMIN_REVIEW_CSV}.gpg || exit 1
  gpg -o ${DATA_DIR}/${THEMATIC_AREAS_CSV} --decrypt ${ENCRYPTED_DIR}/${THEMATIC_AREAS_CSV}.gpg || exit 1
  gpg -o ${DATA_DIR}/${JUDGE_EVALUATION_CSV} --decrypt ${ENCRYPTED_DIR}/${JUDGE_EVALUATION_CSV}.gpg || exit 1
  gpg -o ${DATA_DIR}/${TOP13_DATA_FILE} --decrypt ${ENCRYPTED_DIR}/${TOP13_DATA_FILE}.gpg || exit 1
  gpg -o ${DATA_DIR}/${LFC_EVALUATION_CSV} --decrypt ${ENCRYPTED_DIR}/${LFC_EVALUATION_CSV}.gpg || exit 1
  gpg -o ${DATA_DIR}/${BASE_ATTACHMENTS} --decrypt ${ENCRYPTED_DIR}/${BASE_ATTACHMENTS}.gpg || exit 1
  gpg -o "${DATA_DIR}/${TOP13_SUPPLEMENTAL_ATTACHMENTS}" --decrypt "${ENCRYPTED_DIR}/${TOP13_SUPPLEMENTAL_ATTACHMENTS}.gpg" || exit 1
  gpg -o "${DATA_DIR}/${TOP13_SYNTHESIS_MEMO_ATTACHMENTS}" --decrypt "${ENCRYPTED_DIR}/${TOP13_SYNTHESIS_MEMO_ATTACHMENTS}.gpg" || exit 1
  gpg -o "${DATA_DIR}/${BRIDGESPAN_ANALYSIS_ZIP}" --decrypt "${ENCRYPTED_DIR}/${BRIDGESPAN_ANALYSIS_ZIP}.gpg" || exit 1

  mkdir -p ${TOC_DIR}
  mkdir -p ${TDC_CONFIG_DIR}

  echo "Setting up attachments..."
  unzip -d ${DATA_DIR} ${DATA_DIR}/${BASE_ATTACHMENTS}
  mv "${DATA_DIR}/Registration_and_Application_forms_PDFs_EOC" $ATTACHMENTS_DIR

  mkdir -p $TMP_ATTACHMENTS_DIR
  unzip -d $TMP_ATTACHMENTS_DIR "${DATA_DIR}/${TOP13_SUPPLEMENTAL_ATTACHMENTS}"
  ls $TMP_ATTACHMENTS_DIR | grep "[[:digit:]]\+_" | while read dir ; do
    cp -v "$TMP_ATTACHMENTS_DIR/$dir/"*.pdf ${ATTACHMENTS_DIR}/${dir/_*/} ;
  done
  rm -rf $TMP_ATTACHMENTS_DIR

  mkdir -p $TMP_ATTACHMENTS_DIR
  unzip -d $TMP_ATTACHMENTS_DIR "${DATA_DIR}/${TOP13_SYNTHESIS_MEMO_ATTACHMENTS}"
  ls $TMP_ATTACHMENTS_DIR | while read file ; do
    dir=${file/_*}
    cp -v "$TMP_ATTACHMENTS_DIR/$file" ${ATTACHMENTS_DIR}/$dir/ ;
  done
  rm -rf $TMP_ATTACHMENTS_DIR

  mkdir -p $BRIDGESPAN_ANALYSIS_FOLDER
  unzip -d $BRIDGESPAN_ANALYSIS_FOLDER "${DATA_DIR}/${BRIDGESPAN_ANALYSIS_ZIP}"

  # Clean up large zips to save disk space
  rm ${DATA_DIR}/${BASE_ATTACHMENTS}
  rm "${DATA_DIR}/${TOP13_SUPPLEMENTAL_ATTACHMENTS}"
  rm "${DATA_DIR}/${TOP13_SYNTHESIS_MEMO_ATTACHMENTS}"
  rm "${DATA_DIR}/${BRIDGESPAN_ANALYSIS_ZIP}"
fi

if ! echo "fcc64efaf84cb0d10497bac4b1e9750e9f866faf  $DATA_DIR/$PROPOSALS_CSV" | sha1sum -c &> /dev/null ; then
  echo "ERROR: SHA of PROPOSALS_CSV did not match expectation!"
  echo "This means that we most likely got a new file, which may have the old"
  echo "errors in it (specifically the organization proposal 829)."
  echo "If we got a new file and there are no further errors, you"
  echo "can remove this check from torque-refresh!  If not, please"
  echo "make adjustments in a new file and update the sha."
  exit 1
fi

mkdir -p $TDC_CONFIG_DIR

${RUNNER} --proposals-csv="${DATA_DIR}/${PROPOSALS_CSV}" \
          --admin-review-csv="${DATA_DIR}/${ADMIN_REVIEW_CSV}" \
          --judge-evaluation-csv="${DATA_DIR}/${JUDGE_EVALUATION_CSV}" \
          --lfc-evaluation-csv="${DATA_DIR}/${LFC_EVALUATION_CSV}" \
          --thematic-areas-csv="${DATA_DIR}/${THEMATIC_AREAS_CSV}" \
          --bridgespan-data-csv="${BRIDGESPAN_ANALYSIS_FOLDER}/${BRIDGESPAN_ANALYSIS_CSV}" \
          --bridgespan-overview-folder="${BRIDGESPAN_ANALYSIS_FOLDER}" \
          --top13-data-file="${DATA_DIR}/${TOP13_DATA_FILE}" \
          --attachments-dir=${ATTACHMENTS_DIR} \
          --tdc-config-dir="${TDC_CONFIG_DIR}"
if [ $? -ne 0 ]; then
		echo Failure!
		exit 1
fi

echo "Done creating wiki."
