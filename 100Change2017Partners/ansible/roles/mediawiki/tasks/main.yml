---

- name: Add php repository - Ubuntu
  become_user: root
  apt_repository:
    repo: ppa:ondrej/php
  when: ansible_distribution == 'Ubuntu'

- name: install prerequisites
  become_user: root
  # See https://www.mediawiki.org/wiki/Manual:Installation_requirements
  apt:
    name: "{{ item }}"
    #update_cache: yes # commented out for dev purposes
    state: present
  loop:
    - apache2
    - curl
    - git
    - php
    - php-apcu
    - php-cli
    - php-intl
    - php-mbstring
    - php-pgsql
    - php-xml
    - unzip

- name: Setup installation directory
  file:
    path: "{{ mediawiki_install_directory }}"
    state: directory

- name: Download MediaWiki
  get_url:
    url: https://releases.wikimedia.org/mediawiki/1.33/mediawiki-1.33.0.tar.gz
    dest: "{{ mediawiki_install_directory }}/mediawiki-1.33.0.tar.gz"
    checksum: sha256:8335a2d8740c5dd5919a480b74c3d8e19f23a68b396df48c2d77646272fdcd67

- name: Extract MediaWiki tarball
  unarchive:
    src: "{{ mediawiki_install_directory }}/mediawiki-1.33.0.tar.gz"
    dest: "{{ mediawiki_install_directory }}/"
    remote_src: yes
    creates: "{{ mediawiki_install_directory }}/mediawiki-1.33.0/"

- name: Enable PHP modules
  become_user: root
  shell: phpenmod {{ item }}
  loop:
    - mbstring
    - mysqli
    - xml

- name: Get Composer
  get_url:
    url: https://getcomposer.org/installer
    dest: "{{ mediawiki_install_directory }}/composer-setup.php"
    checksum: "sha384:e5325b19b381bfd88ce90a5ddb7823406b2a38cff6bb704b0acc289a09c8128d4a8ce2bbafcd1fcbdc38666422fe2806"

- name: Make wiki bin directory
  file:
    path: "{{ mediawiki_install_directory }}/bin"
    state: directory

- name: Install Composer locally
  shell: php {{ mediawiki_install_directory }}/composer-setup.php --install-dir={{ mediawiki_install_directory }}/bin --filename=composer

- name: Remove Composer setup script
  file:
    path: "{{ mediawiki_install_directory }}/composer-setup.php"
    state: absent

- name: Install Composer globally
  become_user: root
  shell: mv {{ mediawiki_install_directory }}/bin/composer /usr/local/bin/composer

- name: Install MW with Composer
  command: composer install --no-dev
  args:
    chdir: "{{ mediawiki_install_directory }}/mediawiki-1.33.0"

- name: Install EmbedVideo
  unarchive:
    src: "{{ playbook_dir }}/../../thirdparty/extensions/EmbedVideo-v2.8.0.zip"
    dest: "{{ mediawiki_install_directory }}/mediawiki-1.33.0/extensions/"

- name: Checkout Torque
  git:
    repo: https://github.com/OpenTechStrategies/torque
    dest: "{{ mediawiki_install_directory }}/torque/"
    version: e9e787b

- name: Link TorqueDataConnect
  file:
    src: "{{ mediawiki_install_directory }}/torque/TorqueDataConnect/"
    dest: "{{ mediawiki_install_directory }}/mediawiki-1.33.0/extensions/TorqueDataConnect"
    state: link

- name: Create Wiki
  command: "php {{ mediawiki_install_directory }}/mediawiki-1.33.0/maintenance/install.php --dbtype=postgres --dbserver=localhost --dbuser=wikiuser --dbpass=\"{{ db_password }}\" --dbname=100Change2017Partners --scriptpath=\"/100Change2017Partners\" --lang=en --pass=\"{{ mediawiki_admin_password }}\" \"100Change2017Partners\" \"admin\""
  args:
    creates: "{{ mediawiki_install_directory }}/mediawiki-1.33.0/LocalSettings.php"

- name: Enable EmbedVideo
  lineinfile:
    path: "{{ mediawiki_install_directory }}/mediawiki-1.33.0/LocalSettings.php"
    line: "wfLoadExtension('EmbedVideo-v2.8.0');"

- name: Enable TorqueDataConnect
  blockinfile:
    path: "{{ mediawiki_install_directory }}/mediawiki-1.33.0/LocalSettings.php"
    marker: "## {mark} ANSIBLE TORQUEDATACONNECT CONFIG"
    block: |
      define("TORQUE_CONFIG", 4000);
      define("TORQUE_CONFIG_TALK", 4001);
      $wgExtraNamespaces[TORQUE_CONFIG] = "TorqueConfig";
      $wgExtraNamespaces[TORQUE_CONFIG_TALK] = "TorqueConfig_talk";
      $wgNamespaceProtection[TORQUE_CONFIG] = array("edittorqueconfig");
      $wgTorqueDataConnectConfigPage = "TorqueConfig:MainConfig";
      $wgTorqueDataConnectNotFoundMessage = "This proposal has been disqualified in admin, peer, or expert review.";
      $wgTorqueDataConnectWikiKey = "100Change2017Partners";
      $wgTorqueDataConnectSheetName = "LFC100Change2017";
      wfLoadExtension('TorqueDataConnect');

- name: Set TOC depth
  lineinfile:
    path: "{{ mediawiki_install_directory }}/mediawiki-1.33.0/LocalSettings.php"
    line: $wgMaxTocLevel = 2;

- name: Disable MediaWiki Cache
  # When the cache is enabled, on AWS, with the default setting,
  # the following createAndPromote.php command fails due to cache timeout.
  # The reason isn't clear, but for now, this will fix it.
  lineinfile:
    path: "{{ mediawiki_install_directory }}/mediawiki-1.33.0/LocalSettings.php"
    line: $wgMainCacheType = CACHE_NONE;

- name: Create csv2wiki user
  command: "php {{ mediawiki_install_directory }}/mediawiki-1.33.0/maintenance/createAndPromote.php --bot --force --dbuser=wikiuser --dbpass=\"{{ db_password }}\" \"{{ mediawiki_csv2wiki_username }}\" \"{{ mediawiki_csv2wiki_password }}\""

- name: Set Group Permissions
  blockinfile:
    marker: "## {mark} ANSIBLE GROUP PERMISSIONS CONFIG"
    path: "{{ mediawiki_install_directory }}/mediawiki-1.33.0/LocalSettings.php"
    block: |
      $wgGroupPermissions['*']['read'] = false;
      $wgGroupPermissions['Staff']['read'] = true;

      foreach($wgGroupPermissions['sysop'] as $key => $value) {
        $wgGroupPermissions['LFCTorque'][$key] = $value;
      }

      $wgGroupPermissions['bot']['protect'] = true;
      $wgRestrictionLevels[] = 'generated';
      $wgGroupPermissions['bot']['generated'] = true;
      $wgGroupPermissions['bot']['torquedataconnect-admin'] = true;

      # Permissions that we want sysops/admins to have that
      # but not for staff go here
      $wgGroupPermissions['sysop']['generated'] = true;
      $wgGroupPermissions['sysop']['edittorqueconfig'] = true;
      $wgGroupPermissions['sysop']['torquedataconnect-admin'] = true;
      foreach($wgGroupPermissions['sysop'] as $key => $value) {
        $wgGroupPermissions['LFCTorqueAdmin'][$key] = $value;
      }

- name: Transfer LFC Logo
  copy:
    src: 100Change-logo150.png
    dest: "{{ mediawiki_install_directory }}/mediawiki-1.33.0/resources/assets/100Change-logo150.png"

- name: Install LFC Logo
  lineinfile:
    path: "{{ mediawiki_install_directory }}/mediawiki-1.33.0/LocalSettings.php"
    regexp: ^\$wgLogo = .*
    line: $wgLogo = "$wgResourceBasePath/resources/assets/100Change-logo150.png";

- name: Transfer htaccess
  copy:
    src: .htaccess
    dest: "{{ mediawiki_install_directory }}/mediawiki-1.33.0/.htaccess"

# This should come near the end to make sure that all the database updates
# for the extensions get run after the rest of the system is set up.
- name: Run mediawiki updates
  command: "php {{ mediawiki_install_directory }}/mediawiki-1.33.0/maintenance/update.php"

# Handle Apache changes
- name: Symlink to webserver directory
  become_user: root
  file:
    state: link
    src: "{{ mediawiki_install_directory }}/mediawiki-1.33.0"
    path: /var/www/html/100Change2017Partners

- name: Set permissions on attachments directory
  become_user: root
  file:
    path: "/var/www/html/100Change2017Partners/images/"
    owner: www-data
    group: www-data

- name: Restart Apache
  become_user: root
  service:
    name: apache2
    state: restarted
