---
# We need to know what user we're deploying as, but the reason
# here is complex.  At the base level, we need to know what
# user torque should be running as.  But more than that,
# we need to know who to 'become' in the ansible sense when
# we're not becoming root.  The reason we have to specify
# in a different variable than 'ansible_become_user', is
# because that variable overrides task level declarations,
# thereby overriding becoming root for tasks we need to.
# So we store in a different variable and use at the top level
# in main.yml.
deployment_user: ${DEPLOYMENT_USER}

# Where torque installs itself
torque_install_directory: ${TORQUE_INSTALL_DIRECTORY}

# The port the flask server listens on
# e.g. 5000
torque_port: ${TORQUE_PORT}

# The name for starting, stopping, and logging from supervisor
supervisor_torque_name: torque

# The version at https://github.com/OpenTechStrategies/torque
# to deploy.  A default of main works for development, but for
# other environments, we want to use specific commit shas
torque_git_version: main

# Database password for postgres user (usually torque_rw)
db_password: ${DB_PASSWORD}

# Secret key needed for django.  See
# https://docs.djangoproject.com/en/3.1/ref/settings/#std:setting-SECRET_KEY
#
# You can use the following to generate it:
# $ python -c "import secrets; print(secrets.token_urlsafe())"
secret_key: ${SECRET_KEY}
